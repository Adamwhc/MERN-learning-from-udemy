{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './PlaceForm.css'; // const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n//             <Input\n//                 id=\"address\"\n//                 element=\"input\"\n//                 label=\"Address\"\n//                 validators={[VALIDATOR_REQUIRE()]}\n//                 errorText=\"Please enter a valid address.\"\n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPlace = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault(); // console.log(formState.inputs); // send this to the backend!\n\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest('http://localhost:5000/api/places', 'POST', formData // JSON.stringify({\n      //   title: formState.inputs.title.value,\n      //   description: formState.inputs.description.value,\n      //   address: formState.inputs.address.value,\n      //   creator: auth.userId\n      // }),\n      // { 'Content-Type': 'application/json' }\n      );\n      navigate('/');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeSubmitHandler,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid title.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid description (at least 5 characters).\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"address\",\n        element: \"input\",\n        label: \"Address\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        id: \"image\",\n        onInput: inputHandler,\n        errorText: \"Please provide an image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"ADD PLACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n};\n\n_s(NewPlace, \"xsSmUm56aDAUm8EgQGjqNm0IgTc=\", false, function () {\n  return [useHttpClient, useForm, useNavigate];\n});\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useContext","useNavigate","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","ErrorModal","LoadingSpinner","ImageUpload","useForm","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","image","navigate","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","err"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './PlaceForm.css';\n\n// const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n\n//             <Input\n//                 id=\"address\"\n//                 element=\"input\"\n//                 label=\"Address\"\n//                 validators={[VALIDATOR_REQUIRE()]}\n//                 errorText=\"Please enter a valid address.\"\n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n  \nconst NewPlace = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n \n    const [formState, inputHandler] = useForm({\n        title: {\n          value: '',\n          isValid: false\n        },\n        description: {\n          value: '',\n          isValid: false\n        },\n        address: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      },\n      false\n    );\n\n    const navigate = useNavigate();\n\n    const placeSubmitHandler = async (event) => {\n        event.preventDefault();\n        // console.log(formState.inputs); // send this to the backend!\n        try {\n          const formData = new FormData();\n          formData.append('title', formState.inputs.title.value);\n          formData.append('description', formState.inputs.description.value);\n          formData.append('address', formState.inputs.address.value);\n          formData.append('creator', auth.userId);\n          formData.append('image', formState.inputs.image.value);\n          await sendRequest(\n            'http://localhost:5000/api/places', \n            'POST', \n            formData\n            // JSON.stringify({\n            //   title: formState.inputs.title.value,\n            //   description: formState.inputs.description.value,\n            //   address: formState.inputs.address.value,\n            //   creator: auth.userId\n            // }),\n            // { 'Content-Type': 'application/json' }\n          );\n          navigate('/');\n        } catch (err) {}\n        \n    };\n    \n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <Input\n              id=\"title\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Title\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid title.\"\n              onInput={inputHandler}\n          />\n          <Input\n              id=\"description\"\n              element=\"textarea\"\n              label=\"Description\"\n              validators={[VALIDATOR_MINLENGTH(5)]}\n              errorText=\"Please enter a valid description (at least 5 characters).\"\n              onInput={inputHandler}\n          />\n          <Input\n              id=\"address\"\n              element=\"input\"\n              label=\"Address\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid address.\"\n              onInput={inputHandler}\n          />\n          <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n              ADD PLACE\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n};\n  \n\nexport default NewPlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}