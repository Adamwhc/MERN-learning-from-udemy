{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/shared/components/FormElements/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = props => {\n  _s();\n\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    // console.log(event.target);\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length !== 0) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      ref: filePickerRef,\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: \".jpg, png, jpeg\",\n      onChange: pickedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-upload ${props.center && 'center'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload_preview\",\n        children: [previewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 36\n        }, this), !previewUrl && /*#__PURE__*/_jsxDEV(P, {\n          children: \"Please pick up an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: pickImageHandler,\n        children: \"PICK IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageUpload, \"WilFbb/xqHBU56uI1nbtOV2smvc=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState();\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        } \n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    },[file]);\n\n    const pickedHandler = event => {\n        // console.log(event.target);\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length !== 0) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input \n                id={props.id} \n                ref={filePickerRef}\n                style={{display: 'none'}} \n                type=\"file\" \n                accept=\".jpg, png, jpeg\" \n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload_preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <P>Please pick up an image.</P>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n}\n\nexport default ImageUpload;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;;EACzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;EAEA,MAAMW,aAAa,GAAGZ,MAAM,EAA5B;EAEAE,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,IAAL,EAAW;MACP;IACH;;IACD,MAAMO,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;IACAD,UAAU,CAACE,MAAX,GAAoB,MAAM;MACtBN,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb;IACH,CAFD;;IAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB;EACH,CATQ,EASP,CAACA,IAAD,CATO,CAAT;;EAWA,MAAMY,aAAa,GAAGC,KAAK,IAAI;IAC3B;IACA,IAAIC,UAAJ;IACA,IAAIC,WAAW,GAAGX,OAAlB;;IACA,IAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;MACvDJ,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACAhB,OAAO,CAACa,UAAD,CAAP;MACAT,UAAU,CAAC,IAAD,CAAV;MACAU,WAAW,GAAG,IAAd;IACH,CALD,MAKO;MACHV,UAAU,CAAC,KAAD,CAAV;MACAU,WAAW,GAAG,KAAd;IACH;;IACDhB,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;EACH,CAdD;;EAgBA,MAAMM,gBAAgB,GAAG,MAAM;IAC3Bf,aAAa,CAACgB,OAAd,CAAsBC,KAAtB;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA,wBACI;MACI,EAAE,EAAExB,KAAK,CAACqB,EADd;MAEI,GAAG,EAAEd,aAFT;MAGI,KAAK,EAAE;QAACkB,OAAO,EAAE;MAAV,CAHX;MAII,IAAI,EAAC,MAJT;MAKI,MAAM,EAAC,iBALX;MAMI,QAAQ,EAAEZ;IANd;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAK,SAAS,EAAG,gBAAeb,KAAK,CAAC0B,MAAN,IAAgB,QAAS,EAAzD;MAAA,wBACI;QAAK,SAAS,EAAC,sBAAf;QAAA,WACKvB,UAAU,iBAAI;UAAK,GAAG,EAAEA,UAAV;UAAsB,GAAG,EAAC;QAA1B;UAAA;UAAA;UAAA;QAAA,QADnB,EAEK,CAACA,UAAD,iBAAe,QAAC,CAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFpB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEmB,gBAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ,EAgBK,CAACjB,OAAD,iBAAY;MAAA,UAAIL,KAAK,CAAC2B;IAAV;MAAA;MAAA;MAAA;IAAA,QAhBjB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CA1DD;;GAAM5B,W;;KAAAA,W;AA4DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}