{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/user/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  // const Users = [\n  //     {\n  //         id: 'u1', \n  //         name: 'xxx', \n  //         image: 'https://images.unsplash.com/photo-1506973035872-a4ec16b8e8d9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80',\n  //         places: 3\n  //     }\n  // ];\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost/5000/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n      }\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"Q4vun3yn22XWADhJ+SI1yd+xh60=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UserList","ErrorModal","LoadingSpinner","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","Error","message","users","err","errorHandler"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UserList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst Users = () => {\n    // const Users = [\n    //     {\n    //         id: 'u1', \n    //         name: 'xxx', \n    //         image: 'https://images.unsplash.com/photo-1506973035872-a4ec16b8e8d9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80',\n    //         places: 3\n    //     }\n    // ];\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch('http://localhost/5000/api/users');\n                const responseData = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n\n                setLoadedUsers(responseData.users);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        }\n        sendRequest();\n    }, []);\n\n    const errorHandler = () => {\n        setError(null);\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            <UserList items={loadedUsers} />\n        </React.Fragment>\n    );\n};\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,YAAY;MAC5BL,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QAEA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UACd,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACH;;QAEDR,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;QACAb,YAAY,CAAC,KAAD,CAAZ;MACH,CAVD,CAUE,OAAOc,GAAP,EAAY;QACVd,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAACY,GAAG,CAACF,OAAL,CAAR;MACH;IAEJ,CAjBD;;IAkBAP,WAAW;EACd,CApBQ,EAoBN,EApBM,CAAT;;EAsBA,MAAMU,YAAY,GAAG,MAAM;IACvBb,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAED,KAAnB;MAA0B,OAAO,EAAEc;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKhB,SAAS,iBACN;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR,eAOI,QAAC,QAAD;MAAU,KAAK,EAAEI;IAAjB;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAlDD;;GAAML,K;;KAAAA,K;AAoDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}