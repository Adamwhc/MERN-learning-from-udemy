{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport './Input.css';\nimport { validate } from \"../../util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false,\n    isTouched: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    props.onInput(props.id, inputState.value, inputState.isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputeState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputeState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputeState.isValid && inputeState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), element, !inputeState.isValid && inputeState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"eBxg7X2BMa7iPWTutUXDD7HAS98=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","inputeState","rows","label","errorText"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport './Input.css';\nimport { validate } from \"../../util/validators\";\n\nconst inputReducer = (state, action) => {\n    switch(action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH': {\n            return {\n                ...state,\n                isTouched: true\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: '', \n        isValid: false, \n        isTouched: false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        props.onInput(props.id, inputState.value, inputState.isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value, \n            validators: props.validators \n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = props.element === 'input' ? (\n        <input \n            id={props.id} \n            type={props.type} \n            placeholder={props.placeholder} \n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputeState.value}\n        />\n    ) : (\n        <textarea \n            id={props.id} \n            rows={props.rows || 3} \n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputeState.value}\n        />\n    );\n\n    return (\n        <div className={`form-control ${!inputeState.isValid && inputeState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputeState.isValid && inputeState.isTouched && <p>{props.errorText}</p>}\n        </div> \n    )\n};\n\nexport default Input;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,QAAL;MACI,OAAO,EACH,GAAGF,KADA;QAEHG,KAAK,EAAEF,MAAM,CAACG,GAFX;QAGHC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;MAHd,CAAP;;IAKJ,KAAK,OAAL;MAAc;QACV,OAAO,EACH,GAAGN,KADA;UAEHO,SAAS,EAAE;QAFR,CAAP;MAIH;;IACD;MACI,OAAOP,KAAP;EAdR;AAgBH,CAjBD;;AAmBA,MAAMQ,KAAK,GAAGC,KAAK,IAAI;EAAA;;EACnB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBf,UAAU,CAACG,YAAD,EAAe;IACpDI,KAAK,EAAE,EAD6C;IAEpDE,OAAO,EAAE,KAF2C;IAGpDE,SAAS,EAAE;EAHyC,CAAf,CAAzC;EAMA,MAAM;IAAEK,EAAF;IAAMC;EAAN,IAAkBJ,KAAxB;EACA,MAAM;IAAEN,KAAF;IAASE;EAAT,IAAqBK,UAA3B;EAEAb,SAAS,CAAC,MAAM;IACZY,KAAK,CAACI,OAAN,CAAcJ,KAAK,CAACG,EAApB,EAAwBF,UAAU,CAACP,KAAnC,EAA0CO,UAAU,CAACL,OAArD;EACH,CAFQ,EAEN,CAACO,EAAD,EAAKT,KAAL,EAAYE,OAAZ,EAAqBQ,OAArB,CAFM,CAAT;;EAIA,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC3BJ,QAAQ,CAAC;MACLT,IAAI,EAAE,QADD;MAELE,GAAG,EAAEW,KAAK,CAACC,MAAN,CAAab,KAFb;MAGLG,UAAU,EAAEG,KAAK,CAACH;IAHb,CAAD,CAAR;EAKH,CAND;;EAQA,MAAMW,YAAY,GAAG,MAAM;IACvBN,QAAQ,CAAC;MACLT,IAAI,EAAE;IADD,CAAD,CAAR;EAGH,CAJD;;EAMA,MAAMgB,OAAO,GAAGT,KAAK,CAACS,OAAN,KAAkB,OAAlB,gBACZ;IACI,EAAE,EAAET,KAAK,CAACG,EADd;IAEI,IAAI,EAAEH,KAAK,CAACP,IAFhB;IAGI,WAAW,EAAEO,KAAK,CAACU,WAHvB;IAII,QAAQ,EAAEL,aAJd;IAKI,MAAM,EAAEG,YALZ;IAMI,KAAK,EAAEG,WAAW,CAACjB;EANvB;IAAA;IAAA;IAAA;EAAA,QADY,gBAUZ;IACI,EAAE,EAAEM,KAAK,CAACG,EADd;IAEI,IAAI,EAAEH,KAAK,CAACY,IAAN,IAAc,CAFxB;IAGI,QAAQ,EAAEP,aAHd;IAII,MAAM,EAAEG,YAJZ;IAKI,KAAK,EAAEG,WAAW,CAACjB;EALvB;IAAA;IAAA;IAAA;EAAA,QAVJ;EAmBA,oBACI;IAAK,SAAS,EAAG,gBAAe,CAACiB,WAAW,CAACf,OAAb,IAAwBe,WAAW,CAACb,SAApC,IAAiD,uBAAwB,EAAzG;IAAA,wBACI;MAAO,OAAO,EAAEE,KAAK,CAACG,EAAtB;MAAA,UAA2BH,KAAK,CAACa;IAAjC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKJ,OAFL,EAGK,CAACE,WAAW,CAACf,OAAb,IAAwBe,WAAW,CAACb,SAApC,iBAAiD;MAAA,UAAIE,KAAK,CAACc;IAAV;MAAA;MAAA;MAAA;IAAA,QAHtD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAtDD;;GAAMf,K;;KAAAA,K;AAwDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}