{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css'; // const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n//             <Input\n//                 id=\"address\"\n//                 element=\"input\"\n//                 label=\"Address\"\n//                 validators={[VALIDATOR_REQUIRE()]}\n//                 errorText=\"Please enter a valid address.\"\n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPlace, \"JbpOOWi8ZEG4RUbgHa6zbsBMFMM=\", false, function () {\n  return [useForm];\n});\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","NewPlace","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","console","log","inputs"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js"],"sourcesContent":["import React from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css';\n\n// const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n\n//             <Input\n//                 id=\"address\"\n//                 element=\"input\"\n//                 label=\"Address\"\n//                 validators={[VALIDATOR_REQUIRE()]}\n//                 errorText=\"Please enter a valid address.\"\n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n  \nconst NewPlace = () => {\n    const [formState, inputHandler] = useForm({\n        title: {\n          value: '',\n          isValid: false\n        },\n        description: {\n          value: '',\n          isValid: false\n        },\n        address: {\n          value: '',\n          isValid: false\n        }\n      },\n      false\n    );\n\n\n    const placeSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs); // send this to the backend!\n    };\n    \n    return (\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"address\"\n            element=\"input\"\n            label=\"Address\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid address.\"\n            onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            ADD PLACE\n        </Button>\n        </form>\n    );\n};\n  \n\nexport default NewPlace;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,8BAAvD;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,OAAO,CAAC;IACtCI,KAAK,EAAE;MACLC,KAAK,EAAE,EADF;MAELC,OAAO,EAAE;IAFJ,CAD+B;IAKtCC,WAAW,EAAE;MACXF,KAAK,EAAE,EADI;MAEXC,OAAO,EAAE;IAFE,CALyB;IAStCE,OAAO,EAAE;MACPH,KAAK,EAAE,EADA;MAEPC,OAAO,EAAE;IAFF;EAT6B,CAAD,EAcvC,KAduC,CAAzC;;EAkBA,MAAMG,kBAAkB,GAAGC,KAAK,IAAI;IAChCA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACY,MAAtB,EAFgC,CAED;EAClC,CAHD;;EAKA,oBACI;IAAM,SAAS,EAAC,YAAhB;IAA6B,QAAQ,EAAEL,kBAAvC;IAAA,wBACA,QAAC,KAAD;MACI,EAAE,EAAC,OADP;MAEI,OAAO,EAAC,OAFZ;MAGI,IAAI,EAAC,MAHT;MAII,KAAK,EAAC,OAJV;MAKI,UAAU,EAAE,CAACX,iBAAiB,EAAlB,CALhB;MAMI,SAAS,EAAC,6BANd;MAOI,OAAO,EAAEK;IAPb;MAAA;MAAA;MAAA;IAAA,QADA,eAUA,QAAC,KAAD;MACI,EAAE,EAAC,aADP;MAEI,OAAO,EAAC,UAFZ;MAGI,KAAK,EAAC,aAHV;MAII,UAAU,EAAE,CAACN,mBAAmB,CAAC,CAAD,CAApB,CAJhB;MAKI,SAAS,EAAC,2DALd;MAMI,OAAO,EAAEM;IANb;MAAA;MAAA;MAAA;IAAA,QAVA,eAkBA,QAAC,KAAD;MACI,EAAE,EAAC,SADP;MAEI,OAAO,EAAC,OAFZ;MAGI,KAAK,EAAC,SAHV;MAII,UAAU,EAAE,CAACL,iBAAiB,EAAlB,CAJhB;MAKI,SAAS,EAAC,+BALd;MAMI,OAAO,EAAEK;IANb;MAAA;MAAA;MAAA;IAAA,QAlBA,eA0BA,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH,CAxDD;;GAAML,Q;UACgCD,O;;;KADhCC,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}