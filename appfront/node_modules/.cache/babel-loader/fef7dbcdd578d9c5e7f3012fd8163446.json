{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: \"simple building\",\n  description: 'sth for display',\n  imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n  address: 'from google map',\n  location: {\n    lat: 40,\n    lng: 50\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: \"simple building\",\n  description: 'sth for display',\n  imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n  address: 'from google map',\n  location: {\n    lat: 40,\n    lng: 50\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  _s();\n\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n  if (!identifiedPlace) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cannot find the place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title\",\n      onInput: () => {},\n      value: identifiedPlace.title,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description\",\n      onInput: () => {},\n      value: identifiedPlace.description,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: true,\n      children: \"Update place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePlace, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlace","find","p"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: \"simple building\",\n        description: 'sth for display',\n        imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n        address: 'from google map',\n        location: {\n            lat: 40,\n            lng: 50\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: \"simple building\",\n        description: 'sth for display',\n        imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n        address: 'from google map',\n        location: {\n            lat: 40,\n            lng: 50\n        },\n        creator: 'u2'\n    }\n]\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n    if (!identifiedPlace) {\n        <div className=\"center\">\n            <h2>Cannot find the place</h2>\n        </div>\n    }\n\n    return (\n        <form>\n            <Input \n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title\"\n                onInput={() => {}}\n                value={identifiedPlace.title}\n                valid={true}\n            />\n            <Input \n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid description\"\n                onInput={() => {}}\n                value={identifiedPlace.description}\n                valid={true}\n            />\n            <Button type=\"submit\" disabled={true}>Update place</Button>\n        </form>\n    )\n};\n\nexport default UpdatePlace;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,8BAAvD;;AAEA,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,IADR;EAEIC,KAAK,EAAE,iBAFX;EAGIC,WAAW,EAAE,iBAHjB;EAIIC,QAAQ,EAAE,gKAJd;EAKIC,OAAO,EAAE,iBALb;EAMIC,QAAQ,EAAE;IACNC,GAAG,EAAE,EADC;IAENC,GAAG,EAAE;EAFC,CANd;EAUIC,OAAO,EAAE;AAVb,CADiB,EAajB;EACIR,EAAE,EAAE,IADR;EAEIC,KAAK,EAAE,iBAFX;EAGIC,WAAW,EAAE,iBAHjB;EAIIC,QAAQ,EAAE,gKAJd;EAKIC,OAAO,EAAE,iBALb;EAMIC,QAAQ,EAAE;IACNC,GAAG,EAAE,EADC;IAENC,GAAG,EAAE;EAFC,CANd;EAUIC,OAAO,EAAE;AAVb,CAbiB,CAArB;;AA2BA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,OAAO,GAAGhB,SAAS,GAAGgB,OAA5B;EAEA,MAAMC,eAAe,GAAGZ,YAAY,CAACa,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACb,EAAF,KAASU,OAAhC,CAAxB;;EAEA,IAAI,CAACC,eAAL,EAAsB;IAClB;IAAA;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAGH;;EAED,oBACI;IAAA,wBACI,QAAC,KAAD;MACI,EAAE,EAAC,OADP;MAEI,OAAO,EAAC,OAFZ;MAGI,IAAI,EAAC,MAHT;MAII,KAAK,EAAC,OAJV;MAKI,UAAU,EAAE,CAACb,iBAAiB,EAAlB,CALhB;MAMI,SAAS,EAAC,4BANd;MAOI,OAAO,EAAE,MAAM,CAAE,CAPrB;MAQI,KAAK,EAAEa,eAAe,CAACV,KAR3B;MASI,KAAK,EAAE;IATX;MAAA;MAAA;MAAA;IAAA,QADJ,eAYI,QAAC,KAAD;MACI,EAAE,EAAC,aADP;MAEI,OAAO,EAAC,UAFZ;MAGI,KAAK,EAAC,aAHV;MAII,UAAU,EAAE,CAACJ,mBAAmB,CAAC,CAAD,CAApB,CAJhB;MAKI,SAAS,EAAC,kCALd;MAMI,OAAO,EAAE,MAAM,CAAE,CANrB;MAOI,KAAK,EAAEc,eAAe,CAACT,WAP3B;MAQI,KAAK,EAAE;IARX;MAAA;MAAA;MAAA;IAAA,QAZJ,eAsBI,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,QAAQ,EAAE,IAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH,CArCD;;GAAMO,W;UACcf,S;;;KADde,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}