{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport './NewPlace.css'; // const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  console.log(formState);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPlace, \"pAjjYyWkG5ilcNO/vLwHDBzP4EU=\");\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","inputHandler","id","placeSubmitHandler","event","preventDefault","console","log"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport './NewPlace.css';\n\n// const formReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'INPUT_CHANGE':\n//             let formIsValid = true;\n//             // console.log('state', state);\n//             // console.log('action', action);\n//             for (const inputId in state.inputs) {\n//                 if (inputId === action.inputId) {\n//                     formIsValid = formIsValid && action.isValid;\n//                 } else {\n//                     formIsValid = formIsValid && state.inputs[inputId].isValid;\n//                 }\n//             }\n//             return {\n//                 ...state,\n//                 inputs: {\n//                     ...state.inputs,\n//                     [action.inputId]: {value: action.value, isValid: action.isValid }\n//                 },\n//                 isValid: formIsValid\n//             };\n//         default:\n//             return state;\n//     }\n// };\n\n// const NewPlace = () => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: {\n//             title: {\n//                 value: '',\n//                 isValid: false\n//             },\n//             description: {\n//                 value: '',\n//                 isValid: false\n//             }\n//         },\n//         isValid: false\n//     });\n\n//     const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//             type: 'INPUT_CHANGE', \n//             value: value, \n//             isValid: isValid, \n//             inputId: id\n//         });\n//     }, []);\n\n//     const placeSubmitHandler = event => {\n//         event.preventDefault();\n//         console.log(formState.inputs);\n//     }\n\n//     // console.log('test change',formState);\n//     console.log('form is valid',formState.isValid);\n//     return (\n//         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//             <Input \n//                 id=\"Title\"\n//                 element=\"input\" \n//                 type=\"text\" \n//                 label=\"Title\" \n//                 validators={[VALIDATOR_REQUIRE()]} \n//                 errorText=\"Please enter a valid title\" \n//                 onInput={inputHandler}\n//             />\n\n//             <Input \n//                 id=\"description\"\n//                 element=\"textarea\" \n//                 label=\"Description\" \n//                 validators={[VALIDATOR_MINLENGTH(5)]} \n//                 errorText=\"Please enter a valid description\" \n//                 onInput={inputHandler}\n//             />\n//             <Button type=\"submit\" disabled={!formState.isValid}>\n//                 ADD PLACE\n//             </Button>\n//         </form>\n//     );\n// };\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n      default:\n        return state;\n    }\n  };\n  \nconst NewPlace = () => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: {\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n        },\n        isValid: false\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n        type: 'INPUT_CHANGE',\n        value: value,\n        isValid: isValid,\n        inputId: id\n        });\n    }, []);\n\n    const placeSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs); // send this to the backend!\n    };\n    console.log(formState);\n    return (\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"address\"\n            element=\"input\"\n            label=\"Address\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid address.\"\n            onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            ADD PLACE\n        </Button>\n        </form>\n    );\n};\n  \n\nexport default NewPlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}