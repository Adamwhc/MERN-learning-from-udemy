{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './PlaceForm.css';\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\"; // const DUMMY_PLACES = [\n//     {\n//         id: 'p1',\n//         title: \"simple building\",\n//         description: 'sth for display',\n//         imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n//         address: 'from google map',\n//         location: {\n//             lat: 40,\n//             lng: 50\n//         },\n//         creator: 'u1'\n//     },\n//     {\n//         id: 'p2',\n//         title: \"simple building\",\n//         description: 'sth for display',\n//         imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n//         address: 'from google map',\n//         location: {\n//             lat: 40,\n//             lng: 50\n//         },\n//         creator: 'u2'\n//     }\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePlace = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState(); // const [isLoading, setIsLoading] = useState(true);\n\n  const placeId = useParams().placeId;\n  const navigate = useNavigate();\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false); // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]); // useEffect(() => {\n  //     if(identifiedPlace) {\n  //     }\n  //     setIsLoading(false);\n  // },[setFormData, identifiedPlace])\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault(); // console.log(formState.inputs);\n\n    try {\n      await sendRequest(`http://localhost:5000/api/places/${placeId}`, 'PATCH', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }), {\n        // 'Content-Type': 'application/json',\n        Authorizaiton: 'Bearer ' + auth.token\n      });\n      navigate('/' + auth.userId + '/places');\n    } catch (err) {// console.log(err);\n    }\n  }; // console.log(isLoading);\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!loadedPlace && !error) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cannot find the place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), !isLoading && loadedPlace && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeUpdateSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid title\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.title,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid description\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.description,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"Update place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePlace, \"glFIjEUlTaI29XrZGBz+Yrlb7pM=\", false, function () {\n  return [useHttpClient, useParams, useNavigate, useForm];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useNavigate","Input","Button","Card","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","LoadingSpinner","ErrorModal","UpdatePlace","auth","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","navigate","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","err","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorizaiton","token","userId"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './PlaceForm.css';\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\n\n// const DUMMY_PLACES = [\n//     {\n//         id: 'p1',\n//         title: \"simple building\",\n//         description: 'sth for display',\n//         imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n//         address: 'from google map',\n//         location: {\n//             lat: 40,\n//             lng: 50\n//         },\n//         creator: 'u1'\n//     },\n//     {\n//         id: 'p2',\n//         title: \"simple building\",\n//         description: 'sth for display',\n//         imageUrl: 'https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1469&q=80',\n//         address: 'from google map',\n//         location: {\n//             lat: 40,\n//             lng: 50\n//         },\n//         creator: 'u2'\n//     }\n// ]\n\nconst UpdatePlace = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedPlace, setLoadedPlace] = useState();\n    // const [isLoading, setIsLoading] = useState(true);\n    const placeId = useParams().placeId;\n    const navigate = useNavigate();\n\n    const [formState, inputHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n    useEffect(() => {\n        const fetchPlace = async () => {\n            try {\n                const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n                setLoadedPlace(responseData.place);\n                setFormData({\n                    title: {\n                        value: responseData.place.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: responseData.place.description,\n                        isValid: true\n                    }\n                }, true);\n            } catch (err) {}\n        };\n        fetchPlace();\n    }, [sendRequest, placeId, setFormData]);\n\n    // useEffect(() => {\n    //     if(identifiedPlace) {\n    //     }\n    //     setIsLoading(false);\n    // },[setFormData, identifiedPlace])\n\n\n    const placeUpdateSubmitHandler = async (event) => {\n        event.preventDefault();\n        // console.log(formState.inputs);\n        try {\n            await sendRequest(\n                `http://localhost:5000/api/places/${placeId}`, \n                'PATCH',\n                JSON.stringify({\n                    title: formState.inputs.title.value,\n                    description: formState.inputs.description.value\n                }),\n                {\n                    // 'Content-Type': 'application/json',\n                    Authorizaiton: 'Bearer ' + auth.token\n                }\n            );\n            navigate('/' + auth.userId + '/places');\n        } catch (err) {\n            // console.log(err);\n        }\n        \n    };\n    // console.log(isLoading);\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                {/* <h2>Loading...</h2> */}\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (!loadedPlace && !error) {\n        <div className=\"center\">\n            <Card>\n                <h2>Cannot find the place</h2>\n            </Card>\n        </div>\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {!isLoading && loadedPlace && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n                <Input \n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid title\"\n                    onInput={inputHandler}\n                    initialValue={loadedPlace.title}\n                    initialValid={true}\n                />\n                <Input \n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid description\"\n                    onInput={inputHandler}\n                    initialValue={loadedPlace.description}\n                    initialValid={true}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>Update place</Button>\n            </form>}\n        </React.Fragment>\n    )\n};\n\nexport default UpdatePlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}