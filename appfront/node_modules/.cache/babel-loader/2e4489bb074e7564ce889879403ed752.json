{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/learnreact/newreactproj/appfront/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport './Auth.css';\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault(); // console.log(formState.inputs);\n    // setIsLoading(true);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId);\n        navigate('/');\n      } catch (err) {// console.log(err);\n        // setIsLoading(false);\n        // setError(err.message || 'Something went wrong, please try again');\n      }\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest('http://localhost:5000/api/users/signup', 'POST', formData // JSON.stringify({\n        //     name: formState.inputs.name.value,\n        //     email: formState.inputs.email.value,\n        //     password: formState.inputs.password.value\n        // }),\n        // {\n        //     'Content-Type': 'application/json'\n        // }\n        ); //console.log(formData, responseData);\n\n        auth.login(responseData.userId);\n        navigate('/');\n      } catch (err) {// console.log(err);\n      }\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(ImageUpload, {\n          center: true,\n          id: \"image\",\n          onInput: inputHandler,\n          errorText: \"Please provide an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Please enter at least 6 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"Switch to \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"O1bbuz2heyiiRjcxGfSC5zb6bgA=\", false, function () {\n  return [useNavigate, useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Input","Card","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","useHttpClient","Button","ErrorModal","LoadingSpinner","ImageUpload","useNavigate","Auth","auth","navigate","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","JSON","stringify","login","userId","err","formData","FormData","append"],"sources":["/Users/adam/Desktop/learnreact/newreactproj/appfront/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport './Auth.css';\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const navigate = useNavigate();\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const [formState, inputHandler,setFormData] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        }, \n        false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData({\n                ...formState.inputs,\n                name: undefined,\n                image: undefined\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n        } else {\n            setFormData({\n                ...formState.inputs,\n                name: {\n                    value: '',\n                    isValid:false\n                },\n                image: {\n                    value: null,\n                    isValid: false\n                }\n            },false);\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = async event => {\n        event.preventDefault();\n        // console.log(formState.inputs);\n        // setIsLoading(true);\n        if (isLoginMode) {\n            try{\n                const responseData = await sendRequest(\n                    'http://localhost:5000/api/users/login',\n                    'POST',\n                    JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    }),\n                    {\n                        'Content-Type': 'application/json'\n                    },\n                )\n                auth.login(responseData.userId);\n                navigate('/');\n                \n            } catch (err) {\n                // console.log(err);\n                // setIsLoading(false);\n                // setError(err.message || 'Something went wrong, please try again');\n            }\n        } else {\n            try{\n                const formData = new FormData();\n                formData.append('email', formState.inputs.email.value);\n                formData.append('name', formState.inputs.name.value);\n                formData.append('password', formState.inputs.password.value);\n                formData.append('image', formState.inputs.image.value);\n                \n                const responseData = await sendRequest(\n                    'http://localhost:5000/api/users/signup',\n                    'POST',\n                    formData\n                    // JSON.stringify({\n                    //     name: formState.inputs.name.value,\n                    //     email: formState.inputs.email.value,\n                    //     password: formState.inputs.password.value\n                    // }),\n                    // {\n                    //     'Content-Type': 'application/json'\n                    // }\n                );\n                //console.log(formData, responseData);\n                \n                auth.login(responseData.userId);\n                navigate('/');\n            } catch (err) {\n                // console.log(err);\n            }\n        };\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Card className=\"authentication\">\n                {isLoading && <LoadingSpinner asOverlay/>}\n                <h2>Login Required</h2>\n                <hr />\n                <form onSubmit={authSubmitHandler}>\n                    {!isLoginMode && \n                        <Input \n                            element=\"input\" \n                            id=\"name\" type=\"text\" \n                            label=\"Your Name\" \n                            validators={[VALIDATOR_REQUIRE()]}  \n                            errorText=\"Please enter a name.\"\n                            onInput={inputHandler}\n                        />}\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" />}\n                    <Input \n                        element=\"input\" \n                        id=\"email\" \n                        type=\"email\"\n                        label=\"E-Mail\"\n                        validators={[VALIDATOR_EMAIL()]}\n                        errorText=\"Please enter a valid email address.\"\n                        onInput={inputHandler}\n                    />\n                    <Input \n                        element=\"input\" \n                        id=\"password\" \n                        type=\"password\"\n                        label=\"password\"\n                        validators={[VALIDATOR_MINLENGTH(6)]}\n                        errorText=\"Please enter at least 6 characters.\"\n                        onInput={inputHandler}\n                    />\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                    </Button>\n                </form>\n                <Button inverse onClick={switchModeHandler}>\n                    Switch to {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}